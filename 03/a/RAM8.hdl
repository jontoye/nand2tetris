// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=loadr1, b=loadr2, c=loadr3, d=loadr4, e=loadr5, f=loadr6, g=loadr7, h=loadr8);
    Register(in=in, load=loadr1, out=outr1);
    Register(in=in, load=loadr2, out=outr2);
    Register(in=in, load=loadr3, out=outr3);
    Register(in=in, load=loadr4, out=outr4);
    Register(in=in, load=loadr5, out=outr5);
    Register(in=in, load=loadr6, out=outr6);
    Register(in=in, load=loadr7, out=outr7);
    Register(in=in, load=loadr8, out=outr8);
    Mux8Way16(a=outr1, b=outr2, c=outr3, d=outr4, e=outr5, f=outr6, g=outr7, h=outr8, sel=address, out=out);
}